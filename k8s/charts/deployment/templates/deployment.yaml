kind: Namespace
apiVersion: v1
metadata:
  name: {{ .Values.namespace }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "gatekeeper-deployment.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "gatekeeper-deployment.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gatekeeper-deployment.labels" . | nindent 4 }}
    spec:
      imagePullSecrets:
      - name: regcred
      restartPolicy: Always


      containers:
      - image: {{ .Values.image }}
        name: {{ .Values.name }}-app
        imagePullPolicy: Always

        ports:
        - containerPort: 80
          name: http
          protocol: TCP
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "gatekeeper-deployment.labels" . | nindent 4 }}
    app: {{ .Values.name }}
    name: {{ .Values.name }}-app
spec:
  selector:
    {{- include "gatekeeper-deployment.selectorLabels" . | nindent 8 }}
  ports:
  - name: http
    port: 80
    protocol: TCP
---


apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "gatekeeper-deployment.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
    - {{ .Values.hostname }}
    secretName: {{ .Values.name }}-tls
  backend:
    serviceName: {{ .Values.name }}
    servicePort: 80
  rules:
  - host: {{ .Values.hostname }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .Values.name }}
          servicePort: 80
